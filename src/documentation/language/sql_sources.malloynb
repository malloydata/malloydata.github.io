>>>markdown
# SQL Sources

_SQL sources, introduced in Malloy version 0.56, replace the previous method of including SQL queries in a Malloy model, [SQL blocks](./sql_blocks.malloynb)._

Sometimes it can be useful to base Malloy models off of SQL queries. You can do so by using the `.sql()` [connection method](./connections.malloynb#connection-methods).
>>>malloy
source: my_sql_source is duckdb.sql("""
  SELECT
    first_name,
    last_name,
    gender
  FROM '../data/users.parquet'
  LIMIT 10
""")
>>>markdown

These SQL sources can be used any place a table source can be used:
>>>malloy
run: my_sql_source -> { 
  group_by: first_name 
  aggregate: user_count is count()
}
>>>markdown

Unlike other kinds of sources, SQL sources can be used like a query in some cases.

They can be run directly:
>>>malloy
run: duckdb.sql("select 1 as one")
>>>markdown

And they can also be defined as a query:
>>>malloy
query: my_sql_query is duckdb.sql("select 1 as one")
run: my_sql_query
>>>markdown

_Note: you can only run a SQL source as a query when it is defined as a `query:` or included directly in a `run:` statement._

## Extending SQL Sources

Like other kinds of source, SQL sources can be extended to add reusable computations.
>>>malloy
source: limited_users is duckdb.sql("""
  SELECT
    first_name,
    last_name,
    gender
  FROM '../data/users.parquet'
  LIMIT 10
""") extend {
  measure: user_count is count()
}

run: limited_users -> { aggregate: user_count }
>>>markdown

## Embedding Malloy queries in an SQL block (A.K.A. "Turducken")

Malloy queries can be embedded in SQL blocks as well. When `%{` and `}` appear inside a `"""` quoted (but not a `"` or `'` quoted) string of an SQL source, the Malloy query between the brackets is compiled and replaced with the <code>SELECT</code> statement generated from the query.
>>>malloy
source: users is duckdb.table('../data/users.parquet')

source: malloy_in_sql_query is duckdb.sql("""
  SELECT * FROM
  (%{ // Malloy query starts with the %{
    users -> {
      limit: 10 group_by: first_name, last_name, gender
      aggregate: n_with_this_name is count()
    }
  })  -- Malloy query ends after the }
  WHERE n_with_this_name > 10
""")

run: malloy_in_sql_query -> { select: * }
>>>markdown

\> _We have referred to this feature the ["Turducken"](https://en.wikipedia.org/wiki/Turducken) because you then take the SQL block and wrap it in an SQL source. It isn't the perfect name for infinite nesting, but it is amusing_

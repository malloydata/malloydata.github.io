>>>markdown
# Tags

Tags are a general-purpose feature of Malloy that allow arbitrary metadata to be attached to various Malloy objects (queries, sources, fields, etc.). These are used by the Malloy rendering library within VSCode to decide how fields and queries should be rendered, but they can be parsed and interpreted differently in other applications.

Tags look similar to comments, but they begin with the `#` (hash, octothorpe, number sign). The text contained in tags is collected and distributed to the objects defined after each tag, with the following rules:

* Tags with `##!` are parsed by the compiler and interpreted as compiler flags
* Tags with `##` are collected and attached to the document
* All other tags are attached the the object defined after the tag
* Statements which define multiple objects, distribute their tags to each object defined in the statement.

>>>markdown
```malloy
// Compiler flag
##! enable_cool_malloy_feature

// Attached to the document/model
## tag_1

// Attached to the next query
# tag_2
query: myQuery is someSource -> { select: * }

// Applied to both "a" and "b"
# tag_3
dimension:
  // Applied to "a"
  # tag_4
  a is 'a'
  // Applied to "b"
  # tag_5
  b is 'b'
```
>>>markdown

Tags are collected by the Malloy parser but their contents are parsed by the application (e.g. VSCode), making them extensible for many use cases. In VSCode, tags are interpreted in two ways:
* As rendering instructions: `# bar_chart`
* As documentation comments: `#" This query calculates ...`

Other formats of tags are ignored:
* `#bar_chart` without a space after the `#`
* `#! custom="application" values="here"`


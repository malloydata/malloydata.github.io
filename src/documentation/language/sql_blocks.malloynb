>>>markdown
# SQL Blocks

Sometimes it is useful to add SQL statements into a Malloy file. You can do so by using the `sql:` keyword.
An SQL statement has two properties.

* `select:` -- Has a string value which is bracketed with triple quotes `"""`
* `connection:` -- A string value which is the name of the connection
   _(if not specified the default connection will be used)_

>>>malloy
run: duckdb.sql("""
    SELECT
      first_name,
      last_name,
      gender
    FROM '../data/users.parquet'
    LIMIT 10
  """)
>>>markdown

## Sources from SQL Blocks

Sources can be created from a SQL block, e.g.
>>>malloy
source: limited_users is duckdb.sql("""
    SELECT
      first_name,
      last_name,
      gender
    FROM '../data/users.parquet'
    LIMIT 10
  """) extend {
  measure: user_count is count()
}

run: limited_users -> {
  aggregate: user_count
}
>>>markdown


## Embedding Malloy queries in an SQL block ( Turducken )

Malloy queries can be embedded in SQL blocks as well. When `%{` and `}` appear inside the `"""` string of a `select:` statement, the Malloy query between the brackets is compiled and replaced with the <code>SELECT</code> statement generated from the query.
>>>malloy
source: users is duckdb.table('../data/users.parquet')

run: duckdb.sql("""
-- BEGIN MALLOY QUERY
%{
  users -> {
    limit: 10 group_by: first_name, last_name, gender
    aggregate: n_with_this_name is count()
  }
}
-- END MALLOY QUERY
""")
>>>markdown

\> _We have referred to this feature the ["Turducken"](https://en.wikipedia.org/wiki/Turducken) because you then take the SQL block and wrap it in an SQL source. It isn't the perfect name for infinte nesting, but it is amusing..._

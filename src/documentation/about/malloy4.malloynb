>>>markdown
# Malloy 4.0

We are very excited to announce version 4.0 of the Malloy language.

Malloy 4.0 is our first "released" version of the langauge. There was never an official "3.0", we
are calling it 4.0 because this is the fourth major rennovation of the syntax of the language. It
could also be thought of as "1.0" because this is where we take the adjective "experimental" off of
the language. At this point we have experimented enough. We believe Malloy is now the best language
for working with data stored in an SQL server.

## The 4.0 Release Timeline

Before 4.0, when Malloy was in the experimental phase, it was considered acceptable to make breaking
changes to the language, as we learned more about better ways to express data computation.
Beginning with 4.0, it is our intention to keep code compatibility for existing code, even as we
continue to add capabilties to the language.

The rollout of 4.0 will happen in a way which should make it realtively
easy for users to upgrade their code.

* **Today:** Both 4.0 and pre-4.0 Malloy code are usable in the Pre-Release Malloy VS Code Extension
  * If you are using a language construct which will not work in 4.0, the IDE will show you a warning.
  * The [Documentation](https://malloydata.github.io/documentation) describes the 4.0 syntax.
* **TBD-Date-1:** The Release version of the extension will begin to warn on pre-4.0 compatibility problems.
* **TBD-Date-2:** The Pre-Release version of the extension will give errors, not warnings, on pre-4.0 code.
* **TBD-Date-3:** The Release version of the extension will give errors, not warnings, on pre-4.0 code.

## 4.0 Differences

### Incompatible Changes

These changes will require users to edit existing code. The IDE will flag old code with warnings to
assist in the transition, once the rollout begins.

\> _Links to documentation are marked with [&#x1F4D6;](https://malloydata.github.io/documentation/)_
\> <br/>_&#x1F4D6;? means a doc is incomplete or incorrect at this moment._

* [&#x1F4D6;](https://malloydata.github.io/documentation/language/source#source-extensions) New sources are created with `extend {}` 
* [&#x1F4D6;?](../language/query.malloynb) Existing queries are refined with `+ {}`
* [&#x1F4D6;?](https://malloydata.github.io/documentation/language/query#implicit-sources) `view:` inside a source replaces `query:` inside of a source
* Extensions of a source inside of a query operation are inside the query, in an `extend: { }`.
* The `declare:` statement has been removed
* `run:` replaces `query:` with no name
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/sql_sources ) The `sql:` statement is replaced by SQL sources
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/source#sources-from-tables-or-views) The source `table('connectionName:tablePath')` is now `connectionName.table('tablePath')`
* [&#x1F4D6;?](https://malloydata.github.io/documentation/language/query#projection) The `project:` statement is now called `select:`
* `from()` to create a source from a query is no longer needed
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/sql_sources#embedding-malloy-queries-in-an-sql-block-a-k-a-turducken-) When nesting Malloy code inside a multi-line literal, the syntax 
  is  `%{ malloyCode }` and not `%{ malloyCode }%`
* [&#x1F4D6;?](https://malloydata.github.io/documentation/language/aggregates#sum) Added `source.sum()` to clarify the meaning of sum without a path
* The filter shortcut `{? }` has been removed
* The expression to run an existing query is now `queryName` intead of `-> queryName`
* [&#x1F4D6;?](https://malloydata.github.io/documentation/language/aggregates#count-distinct-) `COUNT(DISTINCT `_expression_`)` is now just `count(`_expression_`)`
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/aggregates#count) `COUNT(*)` is now just `count()`

### New features

These featues are all active now.  Most are not "new" in that they have already appeared in the
Release version of the extension, even though they were part of the 4.0 project.  Code which uses
these will continue to work. They are listed here to provide a complete list of "What Is Malloy
4.0"

* [&#x1F4D6;?](../language/datatypes.malloynb)There are three kinds of string literals, `'`, `"`, and `"""`.
  These can be used interchangably anywhere a literal is legal.
https://malloydata.github.io/documentation/language/calculations* Casting to a specific database type is now legal using a quoted type name
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/expressions#safe-type-cast) Safe cast operator `:::`
* Annotation of objects
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/expressions#null-operations) `??` (the nullish coalescing operation)
* selective `import` of objects from other files
* [&#x1F4D6;](https://malloydata.github.io/documentation/language/calculations) `calculate:` added to provide additional aggregation control
  (often done with window functions in SQL)
>>>markdown

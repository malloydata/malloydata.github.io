>>>markdown
# Lists
Tables with one or two elements can be rendered as lists.  Lists improve information density.

The examples below use the following models

>>>malloy
source: airports is duckdb.table('../data/airports.parquet') extend {
  measure: airport_count is count()
}
>>>markdown

## Normal Table

>>>malloy
#(docs) size=medium limit=5000
run: airports -> {
  group_by: faa_region
  aggregate: airport_count
  nest: by_state is  {
    group_by: state
    aggregate: airport_count 
  }
}
>>>markdown

##  # list
With a `list`, just the first element in the table is shown.

>>>malloy
#(docs) size=small limit=5000
run: airports -> {
  group_by: faa_region
  aggregate: airport_count
  # list
  nest: by_state is  {
    group_by: state
    aggregate: airport_count
  }
}
>>>markdown


##  # list_detail
With `list_detail` the element and value are shown.

>>>malloy
#(docs) size=small limit=5000
run: airports -> {
  group_by: faa_region
  aggregate: airport_count
  # list_detail
  nest: by_state is  {
    group_by: state
    aggregate: airport_count
  }
}
>>>markdown

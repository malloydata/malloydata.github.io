>>>markdown
# Links

Results can annotated so the results are be rendered with links to external urls. 
>>>malloy
source: flights is duckdb.table('../data/flights.parquet') extend {
  measure: flight_count is count()
  join_one: carriers is duckdb.table('../data/carriers.parquet') on carrier=carriers.code
}
>>>markdown
## Simple `link` annotation
If you have a column which is a url, you can turn it into a link with a simple '# link` annotation
>>>malloy
run: flights -> {
    # link
    group_by: flight_link is concat("https://www.flightsfrom.com/", origin)
    aggregate: flight_count
    limit: 5
}
>>>markdown
## Link url_template, append to the end
Often the think you want on the template is at the end of the string.  Create links to flightsfrom.com.
>>>malloy
run: flights -> {
    # link {url_template='https://www.flightsfrom.com/'}
    group_by: origin
    aggregate: flight_count
    limit: 5
}
>>>markdown
## Link url_template, substition
Sometimes the variable part of the link needs to be substitued in the middle
of the string.  In this case, the output columns value inserted where $$ appears in the url_template.

Flights to SJC with links to 'flightsfrom.com'.
>>>malloy
run: flights -> {
    where: destination = 'SJC'
    # link {url_template='https://www.flightsfrom.com/$$-SJC'}
    group_by: origin
    aggregate: flight_count
    limit: 5
}
>>>markdown
## Link with key column coming from another field.
In the example below we want to show the Carrier's nickname with a link using the carriers code.  We can do this by including the code in the query, hiding it with a `#hidden` tag and referencing it using `key_column` in the `# link` tag.
>>>malloy
run: flights -> {
    # link {url_template='https://www.flightsfrom.com/$$' key_column=carrier}
    group_by: 
      carriers.nickname
      # hidden
      carrier
    aggregate: flight_count
    limit: 5
}